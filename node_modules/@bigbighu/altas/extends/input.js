const input = req => {
  return (keySchema, defaultValue) => {
    const requestBody = req.body
    const { query: queryParams, method: requestMethod } = req
    if (!keySchema) {
      return defaultValue ? defaultValue : (requestMethod.toUpperCase === 'GET' ? queryParams : requestBody)
    }
    keySchema = keySchema.split('/')
    let key = keySchema[0]
    let valueType = 's'
    if (keySchema.length > 1) {
      valueType = keySchema.pop()
      key = keySchema.join('/')
    }
    let value = defaultValue
    if (requestMethod.toUpperCase() === 'GET' && queryParams[key] !== undefined) {
      value = queryParams[key]
    } else {
      if (requestBody[key] !== undefined) {
        value = requestBody[key]
      } else if (queryParams[key] !== undefined) {
        value = queryParams[key]
      }
    }
    if (value === null || value === undefined) {
      return value
    }
    switch (valueType) {
      case 'd':
        return parseInt(value)
      case 'f':
        return Number(value)
      case 's':
        return value.toString()
      case 'b':
        return value === 'false' ? false : Boolean(value)
      default:
        return value
    }
  }
}

module.exports = () => {
  return (req, res, next) => {
    req.input = input(req)
    next()
  }
}
